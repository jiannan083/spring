<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd"
    default-lazy-init="true">

    <description>Shiro安全配置</description>
    
    <!-- 配置缓存方案 -->
    <bean id="shiroSpringCacheManager" class="cn.wangjiannan.common.shiro.cache.ShiroSpringCacheManager">
        <property name="cacheManager" ref="cacheManager"/>
    </bean>
    
    <!-- 配置Shiro Filter,此处的bean的ID必须要和web.xml中的Shiro的过滤器的那么name保持一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的连接(登录页面的地址),非必须的属性,默认会自动寻找Web工程根目录下的/login.jsp页面 -->
        <property name="loginUrl" value="/login"/>
        <!-- 登陆成功后跳转的url,不设置shiro会自动跳转上次请求路径 -->
        <property name="successUrl" value="/index"/>
        <!-- 用户访问未对其授权的资源时,所显示的连接 -->
        <property name="unauthorizedUrl" value="/unauth"/>
        <!-- 代表我们要完成shiro过滤器的具体配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 
                    anon  不需要认证就可以访问的资源
                    authc 需要认证才能访问的web资源
                    user  验证通过或RememberMe登录的都可以
                    
                    ?	一个字符
                    *	零个或多个字符
                    **	零个或多个路径所有
                    
                    url匹配顺序:采取第一次匹配优先的方式
                -->
                /captcha.jpg = anon
                /commons/** = anon
                /static/** = anon
                /webhooks = anon
                /login = anon
                /logout = logout
                /** = user
            </value>
        </property>
    </bean>
    
    <!--安全管理器, 核心安全管理接口-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    		<!-- 
    			多realms配置:
    			<property name="realms">
    				<list>
    					<ref bean="defaultRealm" />
    				</list>
    			</property>
    		 -->
        <!-- realm负责获取处理数据;单Realm配置,设置自定义Realm,需要自己实现处理逻辑 -->
        <property name="realm" ref="shiroDbRealm"/>
        <!--定义缓存管理器-->
        <!-- <property name="cacheManager" ref="shiroSpringCacheManager"/> -->
        <!-- <property name="sessionManager" ref="sessionManager"/> -->
    </bean>
    
    <!-- 項目自定义的Realm -->
    <bean id="shiroDbRealm" class="cn.wangjiannan.common.shiro.ShiroDbRealm">
    	<!-- constructor-arg：通过ShiroDbRealm构造函数注入 -->
    	<!-- 构造函数第一个参数,参数名cacheManager -->
        <constructor-arg index="0" name="cacheManager" ref="shiroSpringCacheManager"/>
        <!-- 构造函数第二个参数,参数名matcher -->
        <constructor-arg index="1" name="matcher" ref="credentialsMatcher"/>
        <!-- 启用身份验证缓存，即缓存AuthenticationInfo信息，默认false -->
        <property name="authenticationCachingEnabled" value="true"/>
        <!-- 缓存AuthenticationInfo信息的缓存名称 -->
        <property name="authenticationCacheName" value="authenticationCache"/>
        <!-- 启用权限缓存，即缓存AuthorizationInfo信息，默认true -->
        <!-- <property name="authorizationCachingEnabled" value="true"/> -->
        <!-- 缓存AuthorizationInfo信息的缓存名称 -->
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>
    
    <!-- 密码错误5次锁定半小时 -->
    <bean id="credentialsMatcher" class="cn.wangjiannan.common.shiro.RetryLimitCredentialsMatcher">
        <constructor-arg ref="shiroSpringCacheManager"/>
        <property name="retryLimitCacheName" value="halfHour"/>
        <property name="passwordHash" ref="passwordHash"/>
    </bean>

    
    <!-- shiro密码加密配置 -->
    <bean id="passwordHash" class="cn.wangjiannan.common.shiro.PasswordHash">
        <!-- 密码加密 1次md5,增强密码可修改此处 -->
        <property name="algorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
    </bean>
    
    <!-- 在方法中 注入  securityManager ，进行代理控制 -->
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    
    <!-- 验证码 -->
    <bean class="cn.wangjiannan.common.shiro.captcha.DreamCaptcha">
        <property name="cacheManager" ref="shiroSpringCacheManager"/>
        <!-- 复用半小时缓存 -->
        <property name="cacheName" value="halfHour"/>
    </bean>
    
</beans>